#------------------------------------------------------------------------------
#
#  WARNING !
#
#  This is a generated file. DO NOT EDIT THIS FILE! Your changes will
#  be lost the next time this file is regenerated.
#
#  This file was generated using asterisk-ari-client ruby gem.
#
#------------------------------------------------------------------------------

module Ari
  class Asterisk < Resource


    # GET /asterisk/info
    #
    # Asterisk system information (similar to core show settings)
    #
    #
    # Parameters:
    #
    # only  - Filter information returned
    #
    def self.get_info(options = {})
      path = '/asterisk/info'
      response = client(options).get(path, options)
      AsteriskInfo.new(response.merge(client: options[:client]))
    end
    class << self; alias_method :getInfo, :get_info; end

    # GET /asterisk/variable
    #
    # Global variables
    #
    #
    # Parameters:
    #
    # variable (required) - The variable to get
    #
    def self.get_global_var(options = {})
      raise ArgumentError.new("Parameter variable must be passed in options hash.") unless options[:variable]
      path = '/asterisk/variable'
      response = client(options).get(path, options)
      Variable.new(response.merge(client: options[:client]))
    end
    class << self; alias_method :getGlobalVar, :get_global_var; end

    # POST /asterisk/variable
    #
    # Global variables
    #
    #
    # Parameters:
    #
    # variable (required) - The variable to set
    # value  - The value to set the variable to
    #
    def self.set_global_var(options = {})
      raise ArgumentError.new("Parameter variable must be passed in options hash.") unless options[:variable]
      path = '/asterisk/variable'
      response = client(options).post(path, options)
    end
    class << self; alias_method :setGlobalVar, :set_global_var; end


  end
end

Ari::Client.send :define_method, 'asterisk' do
  Ari::ListResource.new(self, Ari::Asterisk)
end
